
-- Explore total_rate field ,Show meal cost 

EVALUATE
	SELECTCOLUMNS(
		Reservations,
		Reservations[adults],
		Reservations[children],
		Reservations[avg_daily_rate],
		Reservations[total_stay_nights],
		Reservations[meal_cost],
		Reservations[total_rate])
	

	
-- Explore marketing segment discounts over total
EVALUATE
	SELECTCOLUMNS(
		Reservations,
		Reservations[market_segment],
		RELATED(MarketSegment[Discount]),
		Reservations[avg_daily_rate],
		Reservations[total_stay_nights],
		Reservations[accomodation_rate],
		Reservations[total_rate]
	)
	
------------------------------------------
-- Agents
------------------------------------------


-- How many agents work with us?
EVALUATE
	{COUNTX(DISTINCT(Reservations[agent]), [agent])}
	
-- How are reservations distributed by agent?
EVALUATE
	SUMMARIZECOLUMNS(
		Reservations[agent],
		FILTER(Reservations, NOT ISBLANK(Reservations[agent])),
		"Produced Income", ROUND(COALESCE([Income], 0), 2),
		"Income %", ROUND(
						COALESCE(
							 DIVIDE([Income], CALCULATE([Income], ALL(), NOT ISBLANK(Reservations[agent]))),
							 0
						 ) * 100,
					 	 2
					 ),
		"Booking Effectiveness %", ROUND(
										[Booking Effectivenes %] * 100,
										2
									),
		"Booking Volume", [Reservations],
		"Volume %", ROUND(
						DIVIDE([Reservations], CALCULATE([Reservations], ALL(), NOT ISBLANK(Reservations[agent]))) * 100,
						3
					),
		"Earned Comissions", ROUND([Agent Comissions], 2)
	)
	
// Just getting random sample to verify agent_comission calculation
EVALUATE
	SAMPLE(10, 
			SELECTCOLUMNS(Reservations,
				Reservations[is_canceled],
				Reservations[reservation_status],
				Reservations[agent],
				Reservations[accomodation_rate],
				Reservations[agent_comission]),
			RAND()
		)
		
EVALUATE
	// Ranking is based on following criteria:
	// 1. Produced Income % - 80% weight
	// 2. Booking Effectiveness % - 15% weight
	// 3. Booking Volume % - 5% weight

	VAR AgentsRanking = 
		ADDCOLUMNS(
			CALCULATETABLE(VALUES(Reservations[agent]), NOT ISBLANK(Reservations[agent])),
			"Income%", ROUND(
							COALESCE(
								 DIVIDE([Income], CALCULATE([Income], ALL(), NOT ISBLANK(Reservations[agent]))),
								 0
							 ) * 100,
						 	 2
					 	),
			"Effectiveness%", ROUND([Booking Effectivenes %] * 100, 2),
			"Volume%", ROUND(
							DIVIDE([Reservations], CALCULATE([Reservations], ALL(), NOT ISBLANK(Reservations[agent]))) * 100,
							3
						),
			"Earned Comissions", ROUND([Agent Comissions], 2)
		)
		
	RETURN ADDCOLUMNS(
		AgentsRanking,
		"Rank", RANKX(AgentsRanking, [Income%] * 0.80 + [Effectiveness%] * 0.15 + [Volume%] * 0.05)
	)
	
	ORDER BY [Rank]
	